{"ast":null,"code":"var _jsxFileName = \"/home/anand/Downloads/React-Wordle/src/component/Wordle.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport UseWordle from '../hooks/useWordle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Wordle(solution) {\n  _s();\n\n  const {\n    currentGuess,\n    handleKeyUp,\n    formatGuess\n  } = UseWordle(solution);\n  useEffect(() => {\n    window.addEventListener(\"keyup\", handleKeyUp);\n    return () => window.removeEventListener(\"keyup\", handleKeyUp);\n  }, [handleKeyUp]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"currentGuess - \", currentGuess]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), \"div\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Wordle, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Wordle;\n\nvar _c;\n\n$RefreshReg$(_c, \"Wordle\");","map":{"version":3,"sources":["/home/anand/Downloads/React-Wordle/src/component/Wordle.js"],"names":["React","useEffect","UseWordle","Wordle","solution","currentGuess","handleKeyUp","formatGuess","window","addEventListener","removeEventListener"],"mappings":";;;AAAA,OAAQA,KAAR,IAAeC,SAAf,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,oBAAtB;;AAGA,eAAe,SAASC,MAAT,CAAgBC,QAAhB,EAA0B;AAAA;;AAEvC,QAAM;AAACC,IAAAA,YAAD;AAAcC,IAAAA,WAAd;AAA0BC,IAAAA;AAA1B,MAA0CL,SAAS,CAACE,QAAD,CAAzD;AAEAH,EAAAA,SAAS,CAAC,MAAI;AACZO,IAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAgCH,WAAhC;AAEA,WAAO,MAAIE,MAAM,CAACE,mBAAP,CAA2B,OAA3B,EAAmCJ,WAAnC,CAAX;AACD,GAJQ,EAIP,CAACA,WAAD,CAJO,CAAT;AAMA,sBACE;AAAA,4BACI;AAAA,oCAAqBD,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAjBuBF,M;;KAAAA,M","sourcesContent":["import  React,{useEffect } from 'react';\nimport UseWordle from '../hooks/useWordle';\n\n\nexport default function Wordle(solution) {\n\n  const {currentGuess,handleKeyUp,formatGuess}  = UseWordle(solution); \n\n  useEffect(()=>{\n    window.addEventListener(\"keyup\",handleKeyUp);\n\n    return ()=>window.removeEventListener(\"keyup\",handleKeyUp);\n  },[handleKeyUp])\n    \n  return (\n    <div>\n        <div>currentGuess - {currentGuess}</div>\n        div\n\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}