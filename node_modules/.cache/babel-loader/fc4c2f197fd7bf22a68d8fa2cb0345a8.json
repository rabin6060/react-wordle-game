{"ast":null,"code":"var _jsxFileName = \"/home/anand/Downloads/React-Wordle/src/component/Wordle.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport UseWordle from '../hooks/useWordle';\nimport Grid from './Grid';\nimport KeyBoard from './KeyBoard';\nimport Modal from './Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Wordle(_ref) {\n  _s();\n\n  let {\n    solution\n  } = _ref;\n  const {\n    currentGuess,\n    handleKeyUp,\n    guesses,\n    turn,\n    usedKeys,\n    isCorrect\n  } = UseWordle(solution);\n  const [showModal, setShowModal] = useState(false);\n  useEffect(() => {\n    window.addEventListener(\"keyup\", handleKeyUp);\n\n    if (isCorrect) {\n      setTimeout(() => setShowModal, 2000);\n      window.removeEventListener(\"keyup\", handleKeyUp);\n    }\n\n    if (turn > 5) {\n      console.log('out of guesses!');\n      window.removeEventListener(\"keyup\", handleKeyUp);\n    }\n\n    return () => window.removeEventListener(\"keyup\", handleKeyUp);\n  }, [handleKeyUp, isCorrect]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: solution\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      currentGuess: currentGuess,\n      guesses: guesses,\n      turn: turn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(KeyBoard, {\n      usedKeys: usedKeys\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), showModal && /*#__PURE__*/_jsxDEV(Modal, {\n      isCorrect: isCorrect,\n      turn: turn,\n      solution: solution\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Wordle, \"YtqrSdWq2p4T85zwrFSZVvwjIQs=\");\n\n_c = Wordle;\n\nvar _c;\n\n$RefreshReg$(_c, \"Wordle\");","map":{"version":3,"sources":["/home/anand/Downloads/React-Wordle/src/component/Wordle.js"],"names":["React","useState","useEffect","UseWordle","Grid","KeyBoard","Modal","Wordle","solution","currentGuess","handleKeyUp","guesses","turn","usedKeys","isCorrect","showModal","setShowModal","window","addEventListener","setTimeout","removeEventListener","console","log"],"mappings":";;;AAAA,OAAQA,KAAR,IAAeC,QAAf,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAIA,eAAe,SAASC,MAAT,OAA4B;AAAA;;AAAA,MAAZ;AAACC,IAAAA;AAAD,GAAY;AAEzC,QAAM;AAACC,IAAAA,YAAD;AAAcC,IAAAA,WAAd;AAA0BC,IAAAA,OAA1B;AAAkCC,IAAAA,IAAlC;AAAuCC,IAAAA,QAAvC;AAAgDC,IAAAA;AAAhD,MAA8DX,SAAS,CAACK,QAAD,CAA7E;AACA,QAAM,CAACO,SAAD,EAAWC,YAAX,IAA2Bf,QAAQ,CAAC,KAAD,CAAzC;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACZe,IAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAgCR,WAAhC;;AAEA,QAAII,SAAJ,EAAe;AACbK,MAAAA,UAAU,CAAC,MAAIH,YAAL,EAAkB,IAAlB,CAAV;AACAC,MAAAA,MAAM,CAACG,mBAAP,CAA2B,OAA3B,EAAmCV,WAAnC;AACD;;AACD,QAAIE,IAAI,GAAG,CAAX,EAAc;AACZS,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAL,MAAAA,MAAM,CAACG,mBAAP,CAA2B,OAA3B,EAAmCV,WAAnC;AACD;;AACD,WAAO,MAAIO,MAAM,CAACG,mBAAP,CAA2B,OAA3B,EAAmCV,WAAnC,CAAX;AACD,GAZQ,EAYP,CAACA,WAAD,EAAaI,SAAb,CAZO,CAAT;AAeA,sBACE;AAAA,4BACI;AAAA,gBAAMN;AAAN;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD;AAAM,MAAA,YAAY,EAAGC,YAArB;AAAmC,MAAA,OAAO,EAAIE,OAA9C;AAAuD,MAAA,IAAI,EAAIC;AAA/D;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEC;AAApB;AAAA;AAAA;AAAA;AAAA,YAHJ,EAIKE,SAAS,iBAAI,QAAC,KAAD;AAAO,MAAA,SAAS,EAAED,SAAlB;AAA6B,MAAA,IAAI,EAAEF,IAAnC;AAAyC,MAAA,QAAQ,EAAEJ;AAAnD;AAAA;AAAA;AAAA;AAAA,YAJlB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GA5BuBD,M;;KAAAA,M","sourcesContent":["import  React,{useState,useEffect } from 'react';\nimport UseWordle from '../hooks/useWordle';\nimport Grid from './Grid';\nimport KeyBoard from './KeyBoard';\nimport Modal from './Modal';\n\n\n\nexport default function Wordle({solution}) {\n\n  const {currentGuess,handleKeyUp,guesses,turn,usedKeys,isCorrect}  = UseWordle(solution); \n  const [showModal,setShowModal] = useState(false);\n\n  useEffect(()=>{\n    window.addEventListener(\"keyup\",handleKeyUp);\n\n    if (isCorrect) {\n      setTimeout(()=>setShowModal,2000)\n      window.removeEventListener(\"keyup\",handleKeyUp);\n    }\n    if (turn > 5) {\n      console.log('out of guesses!');\n      window.removeEventListener(\"keyup\",handleKeyUp);\n    }\n    return ()=>window.removeEventListener(\"keyup\",handleKeyUp);\n  },[handleKeyUp,isCorrect])\n\n    \n  return (\n    <div>\n        <div>{solution}</div>\n        <Grid currentGuess ={currentGuess} guesses = {guesses} turn = {turn}/>\n        <KeyBoard usedKeys={usedKeys} />\n        {showModal && <Modal isCorrect={isCorrect} turn={turn} solution={solution}/>}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}